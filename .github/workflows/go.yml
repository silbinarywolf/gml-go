name: Go
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go

    - name: Set up *nix dependencies
      run: |
        sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r"
        sudo apt-get install libasound2-dev libglew-dev libgles2-mesa-dev libalut-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get Go dependencies
      run: |
        export GO111MODULE=on
        go mod download
        go get -v

    - name: Generate, Build and Publish
      run: |
        export PATH=${PATH}:`go env GOPATH`/bin
        go install -v -tags debug ./gml
        go install -v -tags headless ./gml
        go install -v -tags "debug headless" ./gml
        go install -v ./gml
        go install -v ./cmd/gmlgo
        gmlgo generate -v ./example/...
        go build -tags debug -v ./example/...
        go build -tags headless -v ./example/...
        go build -tags "debug headless" -v ./example/...
        go build -v ./example/...
        gmlgo publish -v ./example/spaceship

    - name: Test
      run: |
        export DISPLAY=:99.0
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        go test -v ./gml/...
        go test -tags debug -v ./gml/...
        go test -tags headless -v ./gml/...
        go test -tags "debug headless" -v ./gml/...
        go test -v ./cmd/...
        go test -tags "debug headless" -coverprofile="coverage_spaceship.out" -coverpkg=$(go list ./example/spaceship/game) ./example/spaceship/test
        go test -tags "debug headless" -coverprofile="coverage_worm.out" -coverpkg=$(go list ./example/worm/game) ./example/worm/test
