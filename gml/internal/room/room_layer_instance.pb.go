// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: room_layer_instance.proto

package room

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RoomLayerInstance struct {
	Config    *RoomLayerConfig `protobuf:"bytes,1,opt,name=Config" json:"Config,omitempty"`
	Instances []*RoomObject    `protobuf:"bytes,2,rep,name=Instances" json:"Instances,omitempty"`
	// Room Editor only
	DeletedInstances []*RoomObject `protobuf:"bytes,3,rep,name=DeletedInstances" json:"DeletedInstances,omitempty"`
}

func (m *RoomLayerInstance) Reset()         { *m = RoomLayerInstance{} }
func (m *RoomLayerInstance) String() string { return proto.CompactTextString(m) }
func (*RoomLayerInstance) ProtoMessage()    {}
func (*RoomLayerInstance) Descriptor() ([]byte, []int) {
	return fileDescriptorRoomLayerInstance, []int{0}
}

func (m *RoomLayerInstance) GetConfig() *RoomLayerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *RoomLayerInstance) GetInstances() []*RoomObject {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *RoomLayerInstance) GetDeletedInstances() []*RoomObject {
	if m != nil {
		return m.DeletedInstances
	}
	return nil
}

func init() {
	proto.RegisterType((*RoomLayerInstance)(nil), "room.RoomLayerInstance")
}
func (m *RoomLayerInstance) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoomLayerInstance) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Config != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintRoomLayerInstance(dAtA, i, uint64(m.Config.Size()))
		n1, err := m.Config.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if len(m.Instances) > 0 {
		for _, msg := range m.Instances {
			dAtA[i] = 0x12
			i++
			i = encodeVarintRoomLayerInstance(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.DeletedInstances) > 0 {
		for _, msg := range m.DeletedInstances {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintRoomLayerInstance(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func encodeVarintRoomLayerInstance(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *RoomLayerInstance) Size() (n int) {
	var l int
	_ = l
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovRoomLayerInstance(uint64(l))
	}
	if len(m.Instances) > 0 {
		for _, e := range m.Instances {
			l = e.Size()
			n += 1 + l + sovRoomLayerInstance(uint64(l))
		}
	}
	if len(m.DeletedInstances) > 0 {
		for _, e := range m.DeletedInstances {
			l = e.Size()
			n += 1 + l + sovRoomLayerInstance(uint64(l))
		}
	}
	return n
}

func sovRoomLayerInstance(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozRoomLayerInstance(x uint64) (n int) {
	return sovRoomLayerInstance(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RoomLayerInstance) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRoomLayerInstance
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoomLayerInstance: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoomLayerInstance: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRoomLayerInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRoomLayerInstance
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &RoomLayerConfig{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Instances", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRoomLayerInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRoomLayerInstance
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Instances = append(m.Instances, &RoomObject{})
			if err := m.Instances[len(m.Instances)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedInstances", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRoomLayerInstance
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRoomLayerInstance
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeletedInstances = append(m.DeletedInstances, &RoomObject{})
			if err := m.DeletedInstances[len(m.DeletedInstances)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRoomLayerInstance(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRoomLayerInstance
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRoomLayerInstance(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRoomLayerInstance
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRoomLayerInstance
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRoomLayerInstance
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthRoomLayerInstance
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowRoomLayerInstance
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipRoomLayerInstance(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthRoomLayerInstance = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRoomLayerInstance   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("room_layer_instance.proto", fileDescriptorRoomLayerInstance) }

var fileDescriptorRoomLayerInstance = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0xca, 0xcf, 0xcf,
	0x8d, 0xcf, 0x49, 0xac, 0x4c, 0x2d, 0x8a, 0xcf, 0xcc, 0x2b, 0x2e, 0x49, 0xcc, 0x4b, 0x4e, 0xd5,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0x49, 0x49, 0x09, 0x82, 0x15, 0xe4, 0x27, 0x65,
	0xa5, 0x26, 0x97, 0x40, 0x24, 0xa4, 0xc4, 0x91, 0xf4, 0x24, 0xe7, 0xe7, 0xa5, 0x65, 0xa6, 0x43,
	0x24, 0x94, 0x36, 0x30, 0x72, 0x09, 0x06, 0xe5, 0xe7, 0xe7, 0xfa, 0x80, 0xa4, 0x3c, 0xa1, 0xa6,
	0x09, 0xe9, 0x72, 0xb1, 0x39, 0x83, 0x55, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x89, 0xea,
	0x81, 0xf4, 0xeb, 0xc1, 0x15, 0x42, 0x24, 0x83, 0xa0, 0x8a, 0x84, 0xf4, 0xb8, 0x38, 0x61, 0x5a,
	0x8b, 0x25, 0x98, 0x14, 0x98, 0x35, 0xb8, 0x8d, 0x04, 0x10, 0x3a, 0xfc, 0xc1, 0x0e, 0x09, 0x42,
	0x28, 0x11, 0xb2, 0xe1, 0x12, 0x70, 0x49, 0xcd, 0x49, 0x2d, 0x49, 0x4d, 0x41, 0x68, 0x63, 0xc6,
	0xa1, 0x0d, 0x43, 0xa5, 0x93, 0xc0, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78,
	0x24, 0xc7, 0x38, 0xe3, 0xb1, 0x1c, 0x43, 0x12, 0x1b, 0xd8, 0x2f, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x9a, 0x11, 0x61, 0x2c, 0x1a, 0x01, 0x00, 0x00,
}
